name: BuildAndTestMainNet

on:
  pull_request:
    branches:
      - master

env:
  CARGO_TERM_COLOR: always
  CARGO_HOME: "/usr/local/cargo/"
  RUSTUP_HOME: "/usr/local/rustup"
  SCCACHE_DIR: "/usr/local/sccache"
  RUSTC_WRAPPER: "/usr/local/bin/sccache"

jobs:
  musl-build-mainnet:

    runs-on: self-hosted

    container:
      image: rust:latest
      volumes:
        - /var/lib/docker:/var/lib/docker
        - /usr/local/cargo/git:/usr/local/cargo/git
        - /usr/local/cargo/registry:/usr/local/cargo/registry
        - /usr/local/sccache:/usr/local/sccache
        - /usr/local/rustup:/usr/local/rustup
        - /var/lib/docker:/var/lib/docker

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Update Apt
        run: apt update

      - name: Install Musl
        run: apt -y install musl musl-tools

      - uses: themeliolabs/actions-sccache@v1

      - uses: themeliolabs/actions-mold@v1

      - name: Add Default Toolchain
        run: rustup default stable

      - name: Add Musl Target Triple
        run: rustup target add x86_64-unknown-linux-musl

      - name: Run Musl Build
        run: mold --run cargo build --target x86_64-unknown-linux-musl --features metrics --verbose

      - name: Create MelwalletD Archive
        run: tar -czvf /tmp/melwalletd.tar.gz -C target/x86_64-unknown-linux-musl/ debug/themelio-node

      - uses: actions/upload-artifact@v3
        with:
          name: themelio-node-mainnet-dev
          path: /tmp/themelio-node-mainnet-dev.tar.gz



#  build-and-test-mainnet:
#    runs-on: self-hosted
#
#    container:
#      image: ghcr.io/themeliolabs/biome:latest
#      options: --privileged --user root
#      volumes:
#        - /var/lib/docker:/var/lib/docker
##        - /usr/local/sccache:/usr/local/sccache
##        - /hab/cache/artifacts:/hab/cache/artifacts
##        - /hab/pkgs:/hab/pkgs
##        - /usr/local/cargo/git:/usr/local/cargo/git
##        - /usr/local/cargo/registry:/usr/local/cargo/registry
#
#    needs:
#      - musl-build-mainnet
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Import Biome Public Key
#        env:
#          BIOME_PUBLIC_KEY: ${{ secrets.BIOME_PUBLIC_KEY }}
#        run: echo "$BIOME_PUBLIC_KEY" | bio origin key import
#
#      - name: Import Biome Signing Key
#        env:
#          BIOME_SIGNING_KEY: ${{ secrets.BIOME_SIGNING_KEY }}
#        run: echo "$BIOME_SIGNING_KEY" | bio origin key import
#
##      - name: Copy SCCache To Current Directory
##        run: cp -a /usr/local/sccache sccache
##
##      - name: Create Cargo Directory
##        run: mkdir cargo
##
##      - name: Copy Cargo Git Cache To Current Directory
##        run: cp -a /usr/local/cargo/git cargo/git
##
##      - name: Copy Cargo Registry Cache To Current Directory
##        run: cp -a /usr/local/cargo/registry cargo/registry
#
#      - name: Build, Run BATS Tests
#        env:
#          HAB_ORIGIN: "themelio"
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          PROMTAIL_USERNAME: ${{ secrets.PROMTAIL_USERNAME }}
#          PROMTAIL_PASSWORD: ${{ secrets.PROMTAIL_PASSWORD }}
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
#          NETWORK_TO_BUILD: "mainnet"
#        run: ./biome/themelio-node/scripts/ci-test.sh
#
##      - name: Remove Old SCCache
##        run: rm -rf /usr/local/sccache/*
##
##      - name: Copy SCCache From Build
##        run: cp -a sccache/. /usr/local/sccache/
##
##      - name: Remove Old Cargo Git Cache
##        run: rm -rf /usr/local/cargo/git/*
##
##      - name: Copy Cargo Git Cache From Build
##        run: cp -a cargo/git/. /usr/local/cargo/git/
##
##      - name: Remove Old Cargo Registry Cache
##        run: rm -rf /usr/local/cargo/registry/*
##
##      - name: Copy Cargo Registry Cache From Build
##        run: cp -a cargo/registry/. /usr/local/cargo/registry/